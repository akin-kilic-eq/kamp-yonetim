import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              // Sayfa yenilendiğinde cache temizleme
              if (typeof window !== 'undefined') {
                // Performance Navigation API ile sayfa yenileme kontrolü
                if (performance.navigation.type === 1) {
                  console.log('Sayfa yenilendi, cache temizleniyor...');
                  // Session storage'dan cache verilerini temizle
                  const keysToRemove = [];
                  for (let i = 0; i < sessionStorage.length; i++) {
                    const key = sessionStorage.key(i);
                    if (key && (key.includes('cache') || key.includes('temp'))) {
                      keysToRemove.push(key);
                    }
                  }
                  keysToRemove.forEach(key => sessionStorage.removeItem(key));
                  
                  // Local storage'dan cache verilerini temizle
                  const localKeysToRemove = [];
                  for (let i = 0; i < localStorage.length; i++) {
                    const key = localStorage.key(i);
                    if (key && (key.includes('cache') || key.includes('temp'))) {
                      localKeysToRemove.push(key);
                    }
                  }
                  localKeysToRemove.forEach(key => localStorage.removeItem(key));
                }
                
                // Sayfa kapatılmadan önce cache temizleme
                window.addEventListener('beforeunload', function() {
                  console.log('Sayfa kapatılıyor, cache temizleniyor...');
                });
              }
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
